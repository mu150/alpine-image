name: Build & Release Alpine Kernel Image

on:
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # 1) grab your code
      - uses: actions/checkout@v3

      # 2) setup Docker Buildx for cross-arch
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3) login (replace with your registry of choice)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      # 4) build & push multi-arch image
      - name: Build & push multi-arch
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64/v8
          tags: youruser/alpine-kernel:latest

      # 5) list out any dist/ files you want to attach
      - name: List dist/
        run: ls -lh dist || echo "no dist/ dir, skipping"

      # 6) compute a date-based tag
      - name: Compute Release Tag
        id: tag
        run: |
          D=$(date +%Y%m%d)
          N=$(( $(git tag | grep "^$D\." | wc -l) + 1 ))
          echo "TAG=$D.$N" >> $GITHUB_ENV

      # 7) publish on GitHub (idempotent & single-step)
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          files: dist/*    # or omit if you have no extra artifacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
