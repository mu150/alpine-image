name: Build & Release Edge Initramfs + Kernel

on:
  workflow_dispatch:

jobs:
  build-artifacts:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout your code
      - uses: actions/checkout@v3

      # 2) Register QEMU/binfmt for cross-arch support
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      # 3) Enable Buildx
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v2

      # 4) Build the Docker image (amd64) and load it locally
      - name: Build & load alpine-kernel-edge
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          load: true
          platforms: linux/amd64
          tags: alpine-kernel-edge:latest

      # 5) Extract vmlinuz & initramfs into dist/
      - name: Extract artifacts
        run: |
          mkdir -p dist
          # grab container ID
          cid=$(docker create alpine-kernel-edge:latest)
          # detect module version
          KVER=$(docker run --rm alpine-kernel-edge:latest sh -c 'ls /lib/modules')
          # copy both files out
          docker cp "$cid":/boot/vmlinuz-"$KVER" dist/vmlinuz-"$KVER"
          docker cp "$cid":/boot/initramfs-"$KVER"* dist/
          docker rm "$cid"
          
      # 6) Compute a date‐based release tag
      - name: Compute release tag
        id: compute_tag
        run: |
          DATE=$(date +%Y%m%d)
          COUNT=$(( $(git tag | grep "^${DATE}\." | wc -l) + 1 ))
          echo "TAG=${DATE}.${COUNT}" >> $GITHUB_ENV

      # 7) Publish a GitHub Release & attach dist/*
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          name: Release ${{ env.TAG }}
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
